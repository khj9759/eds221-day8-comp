---
title: "Day8"
format: html
editor: visual
---

## Review basics of ggplot 

```{r}
library(tidyverse)
library(here)
library(janitor)

library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(ggExtra)
library(ggbeeswarm)

library(gapminder)
library(sf)
```

## Read in data

```{r}
lizards <- read_csv(here::here("data_tidy","lizards.csv"))
```

Do some data wrangling to create a new subset from lizards where you :

1.  Limit the data to only contain western whiptails, colorado, checkered, and eastern fence lizards
2.  Add a new column with total length converted mm to cm
3.  Group by species and site
4.  Return a summary table with mean total length and standard deviation of total length by species and site

```{r}
length_table <- lizards %>% 
  filter(common_name %in% c("western whiptail", "colorado checkered", "eastern fence lizards")) %>%
  mutate(total_length_cm = total_length * 0.1) %>%
  group_by(common_name, site) %>%
  summarize(mean = mean(total_length_cm, na.rm= TRUE), std = sd(total_length_cm, na.rm = TRUE))
```

facet_wrap()

```{r}
ggplot (data=lizards, aes(x=total_length, y= weight)) +
  geom_point(aes(color= common_name)) +
  facet_wrap(~ common_name, scales = "free")
```

bar chart

```{r}
lizard_counts <- lizards %>% 
  dplyr::count(common_name)

#same : 
lizards %>% 
  group_by(common_name) %>%
  summarize(count =n())

# Use dplyr::count to find the total number of lizards by common name in the lizards dataset
```

```{r}
ggplot(data = lizard_counts, aes(x=n, y=fct_reorder(common_name, n))) +
  geom_col()
```

```{r}
ggplot (data=lizards, aes(x=total_length, y= weight, color = weight)) +
  geom_point() +
  scale_y_continuous(limits= c(0,100), 
                     breaks = seq(from = 0, to = 100, by = 20),
                     expand = c(0,20)) +
  scale_color_gradient(low = "red", high = "navy")
```

## Add repulsive graph

```{r}
ggplot(data = gapminder, aes(x=lifeExp, y=gdpPercap)) +
  geom_point() + 
  annotate("text", x= 40, y= 90000, label = "A LABEL")  +
  geom_hline(yintercept = 70000, linetype = "dotted", color = "purple") +
  geom_vline(xintercept = mean(gapminder$lifeExp), linetype = "dotted",color = "red" )
```

```{r}
gapminder %>%
  filter(year == 2002, continent == "Europe") %>%
  ggplot(aes(x=gdpPercap, y=lifeExp)) +
  geom_point(shape = 13, size = 4, color = "purple",fill = "yellow" ) +
  #geom_text_repel(aes(label=country)) + ## ggrepel 
  gghighlight(country == "Poland",label_key = country)
```

Create a ggplot chart using data only from 2007, then highlight all countries in Europe, adding their country name as the label.

```{r}
gapminder %>% 
  filter(year == 2007) %>% 
  ggplot(aes(x=gdpPercap, y= lifeExp)) +
  geom_point() +
  geom_text_repel(aes(label = country)) +
  gghighlight(continent == "Europe")
```

```{r}
jornada_veg <- read_sf(here::here("data_raw","spatial_vegetation","doc.kml")) %>%
  select(name = Name)

ggplot() +
  geom_sf(data = jornada_veg, aes(fill = name), color = "white") +
  theme_minimal() +
  scale_fill_paletteer_d(palette = "ggthemes::manyeys") +
  theme(panel.background = element_rect(color = "purple", size =1, fill = "gray"),
        plot.background = element_rect(fill = "yellow"),
        panel.grid.major = element_line(color = "pink"),
        axis.text.x=element_text(color = "red")) 

```
